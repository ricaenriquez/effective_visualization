install.packages(c("class", "foreign", "MASS", "nlme", "nnet", "spatial"))
exit
exit()
quit()
install.packages("stringi")
install.packages("mgcv")
quit()
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(GGally)
library(psych)
library(gridExtra)
library(reshape2)
df <- read.csv('../Data_Vis_Code_Files/flightdata/MSP.csv')
setwd("~/Udacity_Projects/effective_visualization")
df <- read.csv('../Data_Vis_Code_Files/flightdata/MSP.csv')
df$ArrDep <- 0
df$ArrDep[df$Origin == "MSP"] <- "Departures"
df$ArrDep[df$Dest == "MSP"] <- "Arrivals"
df$Status <- "On Time"
df$Status[df$Cancelled==1] <- "Cancelled"
df$Status[df$Origin == "MSP" & df$DepDelay> 0 & df$DepDelay <=5] <- 'Short Delay'
df$Status[df$Origin == "MSP" & df$DepDelay> 5 & df$DepDelay <=30] <- 'Medium Delay'
df$Status[df$Origin == "MSP" & df$DepDelay> 30] <- 'Long Delay'
df$Status[df$Dest == "MSP" & df$ArrDelay> 0 & df$ArrDelay <=5] <- 'Short Delay'
df$Status[df$Dest == "MSP" & df$ArrDelay> 5 & df$ArrDelay <=30] <- 'Medium Delay'
df$Status[df$Dest == "MSP" & df$ArrDelay> 30] <- 'Long Delay'
df <- subset(df, Year >= 1988)
df$Years <- 0
df$Years[df$Year >=1988 & df$Year<=2000] <- "1988-2000"
df$Years[df$Year == 2001] <- "2001"
df$Years[df$Year >=2002 & df$Year<=2008] <- "2002-2008"
df$TimeOfDay <- 0
df$TimeOfDay[df$Origin == "MSP" & df$CRSDepTime>400 & df$CRSDepTime<=1000] <- "Morning" #4 - 10
df$TimeOfDay[df$Origin == "MSP" & df$CRSDepTime>1000 & df$CRSDepTime<=1600] <- "Mid-Day" #10 -4
df$TimeOfDay[df$Origin == "MSP" & df$CRSDepTime>1600 & df$CRSDepTime<=2200] <- "Evening" #4 -10
df$TimeOfDay[df$Origin == "MSP" & df$CRSDepTime>2200 | df$CRSDepTime<=400] <- "Night" #10 -4
df$TimeOfDay[df$Dest== "MSP" & df$CRSArrTime>400 & df$CRSArrTime<=1000] <- "Morning" #4 - 10
df$TimeOfDay[df$Dest == "MSP" & df$CRSArrTime>1000 & df$CRSArrTime<=1600] <- "Mid-Day" #10 -4
df$TimeOfDay[df$Dest == "MSP" & df$CRSArrTime>1600 & df$CRSArrTime<=2200]<- "Evening" #4 -10
df$TimeOfDay[df$Dest == "MSP" & df$CRSArrTime>2200 | df$CRSArrTime<=400] <- "Night" #10 -4
df$DayOfWeek[df$DayOfWeek == 1] <- "Mon"
df$DayOfWeek[df$DayOfWeek == 2] <- "Tues"
df$DayOfWeek[df$DayOfWeek == 3] <- "Wed"
df$DayOfWeek[df$DayOfWeek == 4] <- "Thurs"
df$DayOfWeek[df$DayOfWeek == 5] <- "Fri"
df$DayOfWeek[df$DayOfWeek == 6] <- "Sat"
df$DayOfWeek[df$DayOfWeek == 7] <- "Sun"
df$Month[df$Month == 1] <- "Jan"
df$Month[df$Month == 2] <- "Feb"
df$Month[df$Month == 3] <- "Mar"
df$Month[df$Month == 4] <- "Apr"
df$Month[df$Month == 5] <- "May"
df$Month[df$Month == 6] <- "Jun"
df$Month[df$Month == 7] <- "Jul"
df$Month[df$Month == 8] <- "Aug"
df$Month[df$Month == 9] <- "Sept"
df$Month[df$Month == 10] <- "Oct"
df$Month[df$Month == 11] <- "Nov"
df$Month[df$Month == 12] <- "Dec"
df.for_dimple <- subset(df, select = -c(X, Year, DayofMonth, CRSDepTime, CRSArrTime, UniqueCarrier, AirTime, ArrDelay, DepDelay, Origin, Dest, Cancelled, CancellationCode, Diverted, CarrierDelay, WeatherDelay, NASDelay, SecurityDelay, LateAircraftDelay))
df.for_dimple <- df.for_dimple %>%
group_by(ArrDep, DayOfWeek, Status, TimeOfDay, Years, Month) %>%
summarise(NumberOfFlights=n()) %>%
arrange(ArrDep, Month, Years, DayOfWeek, Status, TimeOfDay)
write.table(df.for_dimple, file="../effective_visualization_gist/MSP_dimple.tsv", sep="\t",  col.names = NA)
exit
quit()
